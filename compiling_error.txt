In file included from C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:5:
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.h:43:8: warning: conflicting types for built-in function 'malloc' [-Wbuiltin-declaration-mismatch]
 void * malloc(size_t size, int ff);
        ^~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'main':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:13:15: warning: implicit declaration of function 'sbrk' [-Wimplicit-function-declaration]
   void *ptr = sbrk(0);
               ^~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:13:15: warning: initialization of 'void *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'ff_malloc':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:31:23: warning: implicit declaration of function 'getmem'; did you mean 'getopt'? [-Wimplicit-function-declaration]
     blk_t * blk_ptr = getmem(size);
                       ^~~~~~
                       getopt
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:31:23: warning: initialization of 'blk_t *' {aka 'struct _blk_t *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:39:25: warning: initialization of 'blk_t *' {aka 'struct _blk_t *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]
       blk_t * blk_ptr = getmem(size);
                         ^~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:43:19: error: 'blk_ptr' undeclared (first use in this function); did you mean 'blk_t'?
       remove_free(blk_ptr);
                   ^~~~~~~
                   blk_t
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:43:19: note: each undeclared identifier is reported only once for each function it appears in
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'malloc':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:56:23: warning: initialization of 'blk_t *' {aka 'struct _blk_t *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]
     blk_t * blk_ptr = getmem(size);
                       ^~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:62:9: error: a label can only be part of a statement and a declaration is not a statement
         blk_t * block = ff_search(size);
         ^~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:65:9: error: a label can only be part of a statement and a declaration is not a statement
         blk_t * block = ff_search(size);
         ^~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:65:17: error: redefinition of 'block'
         blk_t * block = ff_search(size);
                 ^~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:62:17: note: previous definition of 'block' was here
         blk_t * block = ff_search(size);
                 ^~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:70:9: error: 'block' undeclared (first use in this function)
     if (block == NULL){
         ^~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:72:25: warning: initialization of 'blk_t *' {aka 'struct _blk_t *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]
       blk_t * blk_ptr = getmem(size);
                         ^~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:76:19: error: 'blk_ptr' undeclared (first use in this function); did you mean 'blk_t'?
       remove_free(blk_ptr);
                   ^~~~~~~
                   blk_t
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'ff_search':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:110:7: warning: implicit declaration of function 'split'; did you mean 'spilt'? [-Wimplicit-function-declaration]
       split(curr, size);
       ^~~~~
       spilt
In file included from C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:3:
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'bf_search':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:136:46: error: expected ')' before ';' token
         if (bf_blk == NULL) {assert(diff == 0;)}
                                              ^
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:136:30: note: to match this '('
         if (bf_blk == NULL) {assert(diff == 0;)}
                              ^~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:136:48: error: expected ';' before '}' token
         if (bf_blk == NULL) {assert(diff == 0;)}
                                                ^
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'spilt':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:151:7: error: 'blk_ptr' undeclared (first use in this function); did you mean 'blk_t'?
   if (blk_ptr == NULL) || (start_ptr->size <= size + 2*BLKHD_SIZE){
       ^~~~~~~
       blk_t
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:151:24: error: expected expression before '||' token
   if (blk_ptr == NULL) || (start_ptr->size <= size + 2*BLKHD_SIZE){
                        ^~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:155:5: error: 'split_ptr' undeclared (first use in this function); did you mean 'start_ptr'?
     split_ptr->next = NULL
     ^~~~~~~~~
     start_ptr
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:156:5: error: expected ';' before 'split_ptr'
     split_ptr->prev = NULL
     ^~~~~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'grow_heap':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:163:21: warning: initialization of 'blk_t *' {aka 'struct _blk_t *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]
   blk_t * new_blk = sbrk(0);
                     ^~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:164:18: warning: initialization of 'void *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
   void * alloc = sbrk(inc_size + BLKHD_SIZE);
                  ^~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'ff_free':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:171:3: error: conversion to non-scalar type requested
   insert_free(BLK_P(us_p)); // insert freed block into free list
   ^~~~~~~~~~~
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c: In function 'bf_free':
C:\Users\prats\OneDrive\Desktop\Duke 1-2\ECE 650 Systems Programming\Homeworks\Homework-1\my_malloc.c:175:3: error: conversion to non-scalar type requested
   insert_free(BLK_P(us_p)); // insert freed block into free list
   ^~~~~~~~~~~
